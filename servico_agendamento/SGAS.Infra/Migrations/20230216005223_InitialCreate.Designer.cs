// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGAS.Infra.Context;

#nullable disable

namespace SGAS.Infra.Migrations
{
    [DbContext(typeof(SGASContext))]
    [Migration("20230216005223_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SGAS.Domain.Entity.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AGDA_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("AGDA_DATA_FIM");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("AGDA_DATA_INICIO");

                    b.Property<int>("IdMotivo")
                        .HasColumnType("int")
                        .HasColumnName("AGDA_ID_MOTIVO");

                    b.Property<int?>("IdUnidadeVenda")
                        .HasColumnType("int")
                        .HasColumnName("AGDA_ID_UNIDADEVENDA");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AGDA_OBSERVACAO");

                    b.Property<int>("Presenca")
                        .HasColumnType("int")
                        .HasColumnName("AGDA_PRESENCA");

                    b.HasKey("Id")
                        .HasName("PK_AGDA");

                    b.ToTable("AGENDA", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AGMT_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime2")
                        .HasColumnName("AGMT_DATA_FINAL");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("AGMT_DATA_INICIO");

                    b.Property<bool>("DiaInteiro")
                        .HasColumnType("bit")
                        .HasColumnName("AGMT_DIA_INTEIRO");

                    b.Property<int>("IdAtendente")
                        .HasColumnType("int")
                        .HasColumnName("AGMT_ID_ATENDENTE");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("AGMT_ID_CLIENTE");

                    b.Property<int>("IdResponsavelServico")
                        .HasColumnType("int")
                        .HasColumnName("AGMT_ID_RESP_SERVICO");

                    b.Property<int?>("IdUnidadeVenda")
                        .HasColumnType("int")
                        .HasColumnName("AGMT_ID_UNIDADEVENDA");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("AGMT_STATUS");

                    b.Property<bool>("VisitaEmCasa")
                        .HasColumnType("bit")
                        .HasColumnName("AGMT_VISITA_EM_CASA");

                    b.HasKey("Id")
                        .HasName("PK_AGMT");

                    b.ToTable("AGENDAMENTO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CARG_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Ativo")
                        .HasColumnType("int")
                        .HasColumnName("CARG_ATIVO");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CARG_DESCRICAO");

                    b.HasKey("Id")
                        .HasName("PK_CARG");

                    b.ToTable("CARGO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.CargoFuncionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CGFN_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("CGFN_DATA_FIM");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("CGFN_DATA_INICIO");

                    b.Property<int>("IdCargo")
                        .HasColumnType("int")
                        .HasColumnName("CGFN_ID_CARGO");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int")
                        .HasColumnName("CGFN_ID_FUNCIONARIO");

                    b.HasKey("Id")
                        .HasName("PK_CGFN");

                    b.ToTable("CARGO_FUNCIONARIO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CATE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CATE_DESCRICAO");

                    b.HasKey("Id")
                        .HasName("PK_CATE");

                    b.ToTable("CATEGORIA", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Cep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CEP_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CEP_BAIRRO");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CEP_COMPLEMENTO");

                    b.Property<bool>("EhCadastroSistema")
                        .HasColumnType("bit")
                        .HasColumnName("CEP_POSSUI_CADASTRO");

                    b.Property<int?>("Ibge")
                        .HasColumnType("int")
                        .HasColumnName("CEP_IBGE");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int")
                        .HasColumnName("CEP_ID_CIDADE");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CEP_LOCALIDADE");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CEP_LOGRADOURO");

                    b.Property<string>("NumeroCep")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CEP_NUMERO");

                    b.Property<string>("Uf")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CEP_UF");

                    b.HasKey("Id")
                        .HasName("PK_CEP");

                    b.ToTable("CEP", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("CIDA_ID");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("CIDA_ID_ESTADO");

                    b.Property<int>("IdMicroRegiao")
                        .HasColumnType("int")
                        .HasColumnName("CIDA_ID_MICROREGIAO");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CIDA_NOME");

                    b.ToTable("CIDADE", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CLIE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CLIE_CPF");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("CLIE_DATA_NASCIMENTO");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int")
                        .HasColumnName("CLIE_ID_PESSOA");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CLIE_NOME");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CLIE_RG");

                    b.HasKey("Id")
                        .HasName("PK_CLIE");

                    b.ToTable("CLIENTE", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EMPR_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMPR_CNPJ");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int")
                        .HasColumnName("EMPR_ID_PESSOA");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMPR_NOME_FANTASIA");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMPR_RAZAO_SOCIAL");

                    b.HasKey("Id")
                        .HasName("PK_EMPR");

                    b.ToTable("EMPRESA", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ENDE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ENDE_BAIRRO");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ENDE_CEP");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ENDE_COMPLEMENTO");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int")
                        .HasColumnName("ENDE_ID_CIDADE");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int")
                        .HasColumnName("ENDE_ID_PESSOA");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ENDE_LOGRADOURO");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ENDE_NUMERO");

                    b.HasKey("Id")
                        .HasName("PK_ENDE");

                    b.ToTable("ENDERECO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Estado", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("EST_ID");

                    b.Property<int>("IdRegiao")
                        .HasColumnType("int")
                        .HasColumnName("EST_ID_REGIAO");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EST_NOME");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EST_SIGLA");

                    b.ToTable("ESTADO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FORN_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FORN_CNPJ");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int")
                        .HasColumnName("FORN_ID_PESSOA");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FORN_NOME_FANTASIA");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FORN_RAZAO_SOCIAL");

                    b.HasKey("Id")
                        .HasName("PK_FORN");

                    b.ToTable("FORNECEDOR", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Funcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FUNC_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FUNC_CONCURRENCY_TEMP");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FUNC_NOME");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FUNC_NORMALIZED_NAME");

                    b.HasKey("Id")
                        .HasName("PK_FUNC");

                    b.ToTable("FUNCAO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.FuncaoUsuario", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("FNUS_ID_FUNCAO");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("FNUS_ID_USUARIO");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("FUNC_DT_FIM");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("FUNC_DT_INICIO");

                    b.HasKey("RoleId", "UserId")
                        .HasName("PK_FNUS");

                    b.HasIndex("UserId");

                    b.ToTable("FUNCAO_USUARIO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FNCR_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FNCR_CPF");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("FNCR_DATA_NASCIMENTO");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int")
                        .HasColumnName("FNCR_ID_PESSOA");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FNCR_NOME");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FNCR_RG");

                    b.HasKey("Id")
                        .HasName("PK_FNCR");

                    b.ToTable("FUNCIONARIO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.HistoricoEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HSTE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("HSTE_CODIGO");

                    b.Property<int>("CodigoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("HSTE_COD_USUARIO");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("HSTE_DT_DATA_CADASTRO");

                    b.Property<string>("NomeTabela")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HSTE_NOMETABELA");

                    b.Property<string>("TipoOperacao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HSTE_TP_OPERACAO");

                    b.Property<string>("ValoresAntigos")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HSTE_DADOS_ANTIGOS");

                    b.Property<string>("ValoresChaves")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HSTE_PK");

                    b.Property<string>("ValoresNovos")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HSTE_DADOS_NOVOS");

                    b.HasKey("Id")
                        .HasName("PK_HSTE");

                    b.ToTable("HISTORICO_EVENTO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.ItemVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ITVD_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("ITVD_DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("ITVD_DATA_CADASTRO");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ITVD_DESCONTO");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("ITVD_ID_PRODUTO");

                    b.Property<int>("IdVenda")
                        .HasColumnType("int")
                        .HasColumnName("ITVD_ID_VENDA");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("ITVD_QUANTIDADE");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ITVD_VALOR_TOTAL");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ITVD_VALOR_UNITARIO");

                    b.HasKey("Id")
                        .HasName("PK_ITVD");

                    b.ToTable("ITEM_VENDA", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.MesoRegiao", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("MSRG_ID");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("MSRG_ID_ESTADO");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MSRG_NOME");

                    b.ToTable("MESO_REGIAO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.MicroRegiao", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("MCRG_ID");

                    b.Property<int?>("IdMesoRegiao")
                        .HasColumnType("int")
                        .HasColumnName("MCRG_ID_MESO_REGIAO");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MCRG_NOME");

                    b.ToTable("MICRO_REGIAO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Motivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MOTI_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MOTI_DESCRICAO");

                    b.HasKey("Id")
                        .HasName("PK_MOTI");

                    b.ToTable("MOTIVO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PESS_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PESS_CELULAR");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("PESS_DATA_ALTERACAO");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("PESS_DATA_CADASTRO");

                    b.Property<bool>("EhEstrangeiro")
                        .HasColumnType("bit")
                        .HasColumnName("PESS_ESTRANGEIRO");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PESS_EMAIL");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("PESS_ID_USUARIO");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PESS_OBSERVACAO");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PESS_TELEFONE");

                    b.HasKey("Id")
                        .HasName("PK_PESS");

                    b.ToTable("PESSOA", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PROD_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("PROD_ATIVO");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("PROD_DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("PROD_DATA_CADASTRO");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PROD_DESCRICAO");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("PROD_ID_CATEGORIA");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PROD_PRECO");

                    b.HasKey("Id")
                        .HasName("PK_PROD");

                    b.ToTable("PRODUTO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Regiao", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("REGI_ID");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("REGI_NOME");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("REGI_SIGLA");

                    b.ToTable("REGIAO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SERV_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CodigoServico")
                        .HasColumnType("int")
                        .HasColumnName("SERV_COD_SERVICO");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("SERV_DATA_CADASTRO");

                    b.Property<int>("IdAgendamento")
                        .HasColumnType("int")
                        .HasColumnName("SERV_ID_AGENDAMENTO");

                    b.Property<int>("IdUsuarioCriacao")
                        .HasColumnType("int")
                        .HasColumnName("SERV_ID_USUARIO");

                    b.Property<int>("IdUsuarioResponsavel")
                        .HasColumnType("int")
                        .HasColumnName("SERV_ID_RESPONSAVEL");

                    b.Property<int>("QuantidadeParcelas")
                        .HasColumnType("int")
                        .HasColumnName("SERV_QTD_PARCELAS");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SERV_VL_TOTAL");

                    b.HasKey("Id")
                        .HasName("PK_SERV");

                    b.ToTable("SERVICO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.UnidadeVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UNVD_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UNVD_CNPJ");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("UNVD_ID_EMPRESA");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int")
                        .HasColumnName("UNVD_ID_PESSOA");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UNVD_NOME_FANTASIA");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UNVD_RAZAO_SOCIAL");

                    b.HasKey("Id")
                        .HasName("PK_UNVD");

                    b.ToTable("UNIDADE_VENDA", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("USUA_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int")
                        .HasColumnName("USUA_ACCESS_FAILED_COUNT");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUA_CONCURRENCY_TEMP");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("USUA_DATA_ALTERACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("USUA_DATA_CRIACAO");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("USUA_DATA_NASCIMENTO");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUA_EMAIL");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("USUA_EMAIL_CONFIRMED");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUA_GENERO");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("USUA_LOCKOUT_ENABLED");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("USUA_LOCKOUT_END");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUA_NOME");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUA_NORMALIZED_EMAIL");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUA_NORMALIZED_NAME");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUA_PASSWORD_HASH");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUA_PHONUMBER");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("USUA_PHONENUMBER_CONFIRMED");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUA_SECURITY_TEMP");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("USUA_TWOFACTOR_ENABELD");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USUA_USERNAME");

                    b.HasKey("Id")
                        .HasName("PK_USUA");

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VEND_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Desconto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VEND_DESCONTO");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("VEND_ID_CLIENTE");

                    b.Property<int?>("IdFuncionario")
                        .HasColumnType("int")
                        .HasColumnName("VEND_ID_FUNCIONARIO");

                    b.Property<int?>("IdUnidadeVenda")
                        .HasColumnType("int")
                        .HasColumnName("VEND_ID_UNIDADE_VENDA");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VEND_VALOR");

                    b.HasKey("Id")
                        .HasName("PK_VEND");

                    b.ToTable("VENDA", (string)null);
                });

            modelBuilder.Entity("SGAS.Domain.Entity.FuncaoUsuario", b =>
                {
                    b.HasOne("SGAS.Domain.Entity.Usuario", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
